// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  summary

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( CPUStats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* CPUStats ) UnmarshalJSON([]byte) error { return nil }
func ( CPUStats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* CPUStats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_CPUStats *CPUStats

func ( ContainerStats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ContainerStats ) UnmarshalJSON([]byte) error { return nil }
func ( ContainerStats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ContainerStats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ContainerStats *ContainerStats

func ( MemoryStats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MemoryStats ) UnmarshalJSON([]byte) error { return nil }
func ( MemoryStats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MemoryStats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MemoryStats *MemoryStats

func ( NodeStats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* NodeStats ) UnmarshalJSON([]byte) error { return nil }
func ( NodeStats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* NodeStats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_NodeStats *NodeStats

func ( PodReference ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PodReference ) UnmarshalJSON([]byte) error { return nil }
func ( PodReference ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PodReference ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PodReference *PodReference

func ( PodStats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PodStats ) UnmarshalJSON([]byte) error { return nil }
func ( PodStats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PodStats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PodStats *PodStats

func ( Summary ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Summary ) UnmarshalJSON([]byte) error { return nil }
func ( Summary ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Summary ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Summary *Summary
